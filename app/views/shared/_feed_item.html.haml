%li{id: feed_item.id, class: "firstCol"}
  .delete-update
    - if current_user?(feed_item.user)
      = link_to "x", feed_item, method: :delete, |
        data: { confirm: "You sure?" },               |
        title: feed_item.text                      |
  = render 'shared/feeds_img', user: feed_item.user        
  .user
    .userTop
      %p.feed-text
        = simple_format(feed_item.text)
      - feed_item.uploads.each do |x|
        %p.isotope-item.ajax-portfolio-detail-homepage-modal-trigger{:data => "#{x.album_id}"}
          = image_tag x.file_attachment.url(:original)
      - feed_item.videos.each do |video|
        %p
          - if ["video/mpeg", "video/x-msvideo", "video/3gpp"].include? video.file_attachment.content_type
            %object{ data: "#{video.file_attachment.url}", width: "303", height: "230", autoplay: "false"}
              %embed{ src: "#{video.file_attachment.url}", width: "303", height: "230"}
          - elsif ["video/mp4", "video/ogg", "video/webm", "video/x-flv"].include? video.file_attachment.content_type
            %video{ width: "303", height:"230", poster:"poster.jpg", controls:"controls", preload:"none" }
              %source{type:"#{video.file_attachment.content_type}", src:"#{video.file_attachment.url}"}
              %object{width:"303", height:"230", type:"application/x-shockwave-flash", data:"#{video.file_attachment.url}"}
                %embed{ src: "#{video.file_attachment.url}", width: "303", height: "230"}         
      %ul
        - @likers = feed_item.likers(User)
        - @comments = feed_item.comment_threads.where('parent_id IS NULL').order('created_at desc')
        %li
          %img{alt: "", height: "11", src: "/assets/heart_img.png", width: "12"}/
          %p{ :id => "likes_count_#{feed_item.class.name}_#{feed_item.id}" } 
            = @likers.count
        %li
          %img{alt: "", height: "11", src: "/assets/feed_icon1.png", width: "13"}/
          %p{ :id => "comment_count_#{feed_item.class.name}_#{feed_item.id}" }  
            = @comments.count
      %span.timestamp
        #{time_ago_in_words(feed_item.created_at)} ago.
    .userBottom
      .like_this-1
        = render 'shared/like_form', object: feed_item, user: feed_item.user
      .show_users
        - comments = feed_item.comment_threads.where('parent_id IS NULL').order('created_at desc')
        - @new_comment = Comment.build_from(feed_item, current_user.id, "")
        .comments
          = render :partial => 'comments/feed_comment', :locals => { comment: @new_comment, parent_id: nil , feed_id: feed_item.id}
          = render :partial => 'comments/feed_child_comments', :collection => comments, :as => :comment
